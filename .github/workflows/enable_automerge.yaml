---
name: Enable Automerge of a pull request from Renovate

on:
  workflow_call:
    inputs:
      renovate_login:
        required: false
        type: string
        default: renovate[bot]
      merge_method:
        required: false
        type: string
        default: merge
      runs-on:
        required: false
        type: string
        default: '"ubuntu-latest"'
        description: |
          JSON string for runs-on.
          e.g.
          runs-on: '"macos-latest"'
          runs-on: '["foo"]'
    secrets:
      gh_token:
        required: false
      gh_app_id:
        required: false
      gh_app_private_key:
        required: false

jobs:
  enable_automerge:
    # Enable automerge to merge pull requests from Renovate automatically.
    runs-on: ${{fromJSON(inputs.runs-on)}}
    permissions: {}
    # "! failure() && ! cancelled()" is required. success() returns false if dependent jobs are skipped. https://github.com/community/community/discussions/45058
    # By default success() is used so we have to override success() by "! failure() && ! cancelled()"
    if: |
      ! failure() && ! cancelled() && github.event.pull_request.user.login == inputs.renovate_login && contains(github.event.pull_request.body, ' **Automerge**: Enabled.')
    steps:
      - run: |
          if [ "$MERGE_METHOD" = merge ] || [ "$MERGE_METHOD" = squash ] || [ "$MERGE_METHOD" = rebase ]; then
            exit 0
          fi
          echo "::error :: inputs.merge_method must be either merge, squash, and rebase."
          exit 1
        env:
          MERGE_METHOD: ${{inputs.merge_method}}
      - uses: suzuki-shunsuke/github-token-action@a058de0a42e494414cf4c112436d663a06fd16c0 # v0.1.0
        id: token
        with:
          github_token: ${{secrets.gh_token}}
          github_app_id: ${{secrets.gh_app_id}}
          github_app_private_key: ${{secrets.gh_app_private_key}}
      - run: gh -R "$GITHUB_REPOSITORY" pr merge --${{inputs.merge_method}} --auto --delete-branch "$PR_NUMBER"
        env:
          GITHUB_TOKEN: ${{steps.token.outputs.token}}
          PR_NUMBER: ${{github.event.pull_request.number}}
